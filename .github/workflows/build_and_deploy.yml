name: Build and Deploy
permissions:
  contents: write
on: [push]
jobs:
  build:
    runs-on: ${{ matrix.runner }}

    strategy:
      matrix:
        include:
          - name: linux-x64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            generate_coverage: true
            build_name: "tripatlas"
            final_executable_name: "tripatlas-linux-x64"
            zipped_name: "tripatlas-linux-x64.zip"
          - name: win-x64
            runner: windows-latest
            target: x86_64-pc-windows-msvc
            generate_coverage: false
            build_name: "tripatlas.exe"
            final_executable_name: "tripatlas-windows-x64.exe"
            zipped_name: "tripatlas-windows-x64.zip"
          - name: macos-x64
            runner: macos-latest
            target: x86_64-apple-darwin
            generate_coverage: false
            build_name: "tripatlas"
            final_executable_name: "tripatlas-macos-x64"
            zipped_name: "tripatlas-macos-x64.zip"
          - name: macos-arm64
            runner: macos-latest
            target: aarch64-apple-darwin
            generate_coverage: false
            build_name: "tripatlas"
            final_executable_name: "tripatlas-macos-arm64"
            zipped_name: "tripatlas-macos-arm64.zip"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "${{ matrix.target }}"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      - name: Setup Cache
        uses: Swatinem/rust-cache@v2

      - name: Install Tarpaulin
        if: matrix.generate_coverage
        run: cargo install cargo-tarpaulin

      - name: Run Test with Coverage
        if: matrix.generate_coverage
        run: cargo tarpaulin --out Xml --verbose --locked --target ${{ matrix.target }}

      - name: Upload Coverage
        if: matrix.generate_coverage
        uses: codecov/codecov-action@v5
        with:
          files: ./cobertura.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true

      - name: Test without Coverage
        if: matrix.generate_coverage == false
        run: cargo test --verbose --locked --target ${{ matrix.target }}

      - name: Build Binary
        run: cargo build --verbose --locked --release --target ${{ matrix.target }}

      - name: Rename Executable
        run: cp ./target/${{ matrix.target }}/release/${{ matrix.build_name }} ${{ matrix.final_executable_name }}

      - name: Zip Executable on Linux and MacOS
        if: matrix.runner != 'windows-latest'
        run: zip ${{ matrix.zipped_name }} ${{ matrix.final_executable_name }}

      - name: Zip Executable on Windows
        if: matrix.runner == 'windows-latest'
        run: Compress-Archive -Path ${{ matrix.final_executable_name }} -DestinationPath ${{ matrix.zipped_name }}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.zipped_name }}
          path: ${{ matrix.zipped_name }}

  deploy:
    name: Deploy Latest
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/download-artifact@v4
      - uses: softprops/action-gh-release@v2
        with:
          files: tripatlas-*/*
          prerelease: true
          tag_name: "latest"
          name: "Latest"
          body: ""
